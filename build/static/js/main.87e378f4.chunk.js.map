{"version":3,"sources":["components/TodoList/TodoListView/TodoListView.js","components/Todo/TodoView/TodoView.js","components/Todo/Todo.js","components/Todo/TodoController.js","components/TodoList/TodoListController.js","components/TodoList/TodoList.js","components/TodoList/index.js","constants.js","components/TodoForm/TodoFormView/TodoFormView.js","redux/app.js","components/TodoForm/TodoFormController.js","components/TodoForm/index.js","components/TodoForm/TodoForm.js","firebase/firebase.js","redux/reducer.js","redux/configureStore.js","components/BottomNav.js","index.js"],"names":["TodoListView","props","todos","react_default","a","createElement","className","length","map","todo","i","key","toString","TodoView","badges","text","isSpeaking","onCompleteTodo","concat","style","position","bottom","right","color","marginLeft","onClick","_ref","children","marginRight","Todo","memo","notify","id","useEffect","datetimecolor","datetimetext","prioritytext","prioritycolor","TodoView_TodoView","TodoListController","toggleTodo","uid","userFieldId","Todos","_props","Todo_Todo","Object","assign","objectSpread","TodoListView_TodoListView","TodoList","compose","firebaseConnect","connect","state","firebaseTodos","firebase","data","PRIORITY","PRIORITY_COLOR","TodoFormView","onSubmit","onDatetimeChange","onPriorityChange","onTextChange","onAdd","type","required","value","autoFocus","placeholder","onKeyUp","onChange","entry_default","locale","minDate","Date","datetime","priority","UPDATE_TIME_FIELDS","sortPriority","b","notCompleted","completed","userHasUid","user","providerData","isTodo","hasOwnProperty","isUser","selectUid","profile","selectTodoDatecolor","arguments","undefined","parse","isAfter","now","differenceInMinutes","selectTodoDateHumanReadable","distanceInWordsToNow","includeSeconds","addSuffix","defaultTodo","action","actionTypes","SET","keys","reduce","prev","defineProperty","app","currentTime","LOGOUT","SET_PROFILE","path","console","warn","TodoFormController","addTodo","_useState","useState","_useState2","slicedToArray","setTodo","event","keyCode","e","target","TodoForm","require","origin","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","auth","GoogleAuthProvider","messaging","sendNotifications","functions","httpsCallable","fire","rootReducer","combineReducers","firebaseStateReducer","rrfConfig","userProfile","createStoreWithMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","timerMiddleware","composeEnhancers","createStore","configureStore","initialState","reactReduxFirebase","createStoreWithFirebase","BottomNav","logout","login","displayName","App","values","filter","sort","selectTodos","dispatch","provider","setFCM","fcm","log","set","payload","stringHash","format","createTodo","startTimer","START_TIMER","actionName","timerName","timerPeriod","stopTimer","STOP_TIMER","setUpMessaging","onReceiveToken","onTokenRefresh","getToken","then","refreshedToken","catch","err","requestPermission","token","error","code","components_TodoForm","components_TodoList","BottomNav_BottomNav","store","rootElement","document","getElementById","ReactDOM","render","use_substate_m","es","navigator","serviceWorker","register","registration","scope"],"mappings":"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","file":"static/js/main.87e378f4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function TodoListView(props) {\r\n    const { todos } = props\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <br />\r\n                        {\r\n                            todos.length === 0\r\n                                ? (\r\n                                    <h1>All done</h1>\r\n                                ) : (\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-8\">\r\n                                            <h5>Todo List</h5>\r\n                                        </div>\r\n                                        <div className=\"col-md-4 text-right\">\r\n                                            <h5>{todos.length} todos left</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <ul className=\"list-group\">\r\n                            {\r\n                                todos.map((todo, i) => (\r\n                                    <li key={i.toString()} className=\"list-group-item\" >\r\n                                        {todo}\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoListView;","import React from 'react'\r\n\r\nexport function TodoView(props) {\r\n    const { badges, text, isSpeaking, onCompleteTodo } = props\r\n    return <div className={`Todo ${isSpeaking ? 'speaking' : ''}`}>\r\n        <h4>\r\n            <i className=\"material-icons\" style={{ position: 'absolute', bottom: 10, right: 20, color: '#99979c' }}>event</i>\r\n            {text}\r\n            <button\r\n                className=\"float-right btn btn-success btn-sm\"\r\n                style={{ marginLeft: 10 }}\r\n                onClick={onCompleteTodo}\r\n            >\r\n                Complete\r\n        </button>\r\n        </h4>\r\n        <p>\r\n            {\r\n                badges.map(\r\n                    ({ color, children }, i) => (\r\n                        <span key={i.toString()} className={`badge badge-${color}`} style={{marginRight:6}}>\r\n                            {children}\r\n                        </span>\r\n                    )\r\n                )\r\n            }\r\n        </p>\r\n    </div>\r\n}\r\nexport default TodoView","import {memo} from 'react'\r\nimport { TodoController } from './TodoController'\r\n\r\nexport const Todo = memo(TodoController)\r\nexport default Todo;","import React, { useEffect } from 'react'\r\nimport TodoView from './TodoView/TodoView'\r\n\r\nexport function TodoController(props) {\r\n    const { notify, onCompleteTodo, id } = props;\r\n    useEffect(\r\n        () => {\r\n            if (props.datetimecolor === 'warning') notify()\r\n        },\r\n        [props.datetimecolor]\r\n    )\r\n    const badges = [\r\n        {\r\n            children: props.datetimetext,\r\n            color: props.datetimecolor\r\n        },\r\n        {\r\n            children: props.prioritytext,\r\n            color: props.prioritycolor\r\n        }\r\n    ]\r\n    return <TodoView\r\n        badges={badges}\r\n        onCompleteTodo={() => onCompleteTodo(id)}\r\n        text={props.text}\r\n    />\r\n}","import React from \"react\";\r\nimport TodoListView from \"./TodoListView/TodoListView\";\r\nimport Todo from \"../Todo/Todo\";\r\nexport const TodoListController = (props) => {\r\n    const { toggleTodo, todos, uid, userFieldId, notify } = props\r\n\r\n    const Todos = todos.map(\r\n        (_props) => <Todo\r\n            {..._props}\r\n            notify={() => notify({\r\n                ..._props,\r\n                userFieldId,\r\n                text: _props.text + ' ' + _props.datetimetext\r\n            })}\r\n            onCompleteTodo={() => toggleTodo(_props, uid)}\r\n        />\r\n    )\r\n    return (\r\n        <TodoListView\r\n            todos={Todos}\r\n        />\r\n    )\r\n}\r\nexport default TodoListController;","import { TodoListController } from './TodoListController';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux';\r\n\r\nexport const TodoList = compose(\r\n    firebaseConnect(['todos']),\r\n    connect(\r\n        state => {\r\n            return {\r\n                firebaseTodos: state.firebase.data.todos\r\n            }\r\n        }\r\n    )\r\n)(TodoListController)\r\n\r\nexport default TodoList;","import {TodoList} from \"./TodoList\";\r\nexport {TodoList};\r\nexport default TodoList","export const PRIORITY = [\r\n    'Noteworhty',\r\n    'Significant',\r\n    'Important'\r\n]\r\nexport const PRIORITY_COLOR = [\r\n    'info',\r\n    'secondary',\r\n    'primary'\r\n]\r\nexport const NL_DATE_FORMAT = \"DD-MM-YYYY\"\r\nexport const DATE_FORMAT = \"YYYY-MM-DD\"\r\nexport const TIME_FORMAT = \"HH:mm\"","import React from 'react'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { PRIORITY } from '../../../constants';\r\n\r\nexport function TodoFormView(props) {\r\n    const { todo, onSubmit, onDatetimeChange, onPriorityChange, onTextChange, onAdd } = props\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <br />\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        className=\"form-control text\"\r\n                        type=\"text\"\r\n                        required={true}\r\n                        value={todo.text}\r\n                        autoFocus={true}\r\n                        placeholder=\"Write a todo\"\r\n                        onKeyUp={onSubmit}\r\n                        onChange={onTextChange}\r\n                    />\r\n                    <DateTimePicker\r\n                        locale=\"nl-NL\"\r\n                        minDate={new Date()}\r\n                        onChange={onDatetimeChange}\r\n                        value={todo.datetime}\r\n                    />\r\n                    <select\r\n                        className=\"form-control priority\"\r\n                        value={todo.priority || 0}\r\n                        onChange={onPriorityChange}\r\n                    >\r\n                        <option value={0}>{PRIORITY[0]}</option>\r\n                        <option value={1}>{PRIORITY[1]}</option>\r\n                        <option value={2}>{PRIORITY[2]}</option>\r\n                    </select>\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-primary\" onClick={onAdd}>\r\n                            Add\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoFormView","import stringHash from \"string-hash\";\r\nimport { format, isPassed as _isPassed, isFuture as _isFuture, differenceInMinutes, isAfter, parse, distanceInWordsToNow } from \"date-fns\";\r\nimport { actionTypes } from 'react-redux-firebase'\r\nimport { PRIORITY_COLOR, PRIORITY } from \"../constants\";\r\nimport { START_TIMER, STOP_TIMER } from 'redux-timer-middleware';\r\n// ACTION TYPES\r\nconst UPDATE_TIME_FIELDS = 'UPDATE_TIME_FIELDS'\r\n\r\n// SELECTORS\r\nexport const sortPriority = (a, b) => b.priority - a.priority\r\nexport const isCompleted = (a) => a.completed\r\nexport const notCompleted = (a) => !a.completed\r\nexport const userHasUid = (user, uid) => user.providerData[0].uid === uid\r\nexport const isTodo = (todo) => todo !== null && todo.hasOwnProperty('id') && todo.hasOwnProperty('text') && todo.hasOwnProperty('datetime')\r\nexport const isUser = (user) => user !== null && user.hasOwnProperty('email')\r\nexport const isPassed = (a) => _isPassed(a.datetime)\r\nexport const isFuture = (a) => _isFuture(a.datetime)\r\nexport const isDanger = (a) => differenceInMinutes(Date.now(), a.datetime) < 5\r\nexport const selectUid = (profile) => profile.providerData[0].uid\r\nexport const selectTodos = (state = {}) => {\r\n    return Object.values(state.todos)\r\n        .filter(notCompleted)\r\n        .sort(sortPriority)\r\n}\r\nexport const selectMostImportantTodos = (state = {}) => {\r\n    return state\r\n        .filter(isFuture)\r\n        .filter(isDanger)\r\n        .slice(0, 1)\r\n}\r\nexport const selectTodoDatecolor = (todo = {}) => {\r\n    const datetime = parse(todo.datetime)\r\n    return isAfter(Date.now(), datetime)\r\n        ? 'danger'\r\n        : (\r\n            differenceInMinutes(datetime, Date.now()) < 5\r\n                ? 'warning'\r\n                : 'success'\r\n        )\r\n}\r\nexport const selectTodoDateHumanReadable = (todo = {}) => {\r\n    const datetime = parse(todo.datetime)\r\n    return distanceInWordsToNow(datetime, { includeSeconds: true, addSuffix: true })\r\n}\r\n\r\n/// CREATORS\r\nexport function createTimer() {\r\n    return {\r\n        type: START_TIMER,\r\n        payload: {\r\n            actionName: UPDATE_TIME_FIELDS,\r\n            timerName: 'updateTimeFields',\r\n            timerPeriod: 20000\r\n        }\r\n    }\r\n}\r\nexport function createStopTimer() {\r\n    return {\r\n        type: STOP_TIMER,\r\n        payload: {\r\n            timerName: 'updateTimeFields',\r\n        }\r\n    }\r\n}\r\nexport function createTodo(payload) {\r\n    const id = stringHash(payload.text);\r\n    const datetime = format(payload.datetime)\r\n    return {\r\n        ...payload,\r\n        id,\r\n        datetime\r\n    }\r\n}\r\nexport const defaultTodo = (text = \"\", priority = 0, datetime = new Date()) => ({\r\n    text,\r\n    priority,\r\n    datetime\r\n})\r\n\r\n\r\n// REDUCERS\r\nfunction todo(state = undefined, action = {}) {\r\n    switch (action.type) {\r\n        case actionTypes.SET:\r\n            if (!isTodo(action.todo)) return state;\r\n            return todo({\r\n                ...action.todo,\r\n                prioritycolor: PRIORITY_COLOR[action.todo.priority],\r\n                prioritytext: PRIORITY[action.todo.priority],\r\n            }, { type: UPDATE_TIME_FIELDS })\r\n        case UPDATE_TIME_FIELDS:\r\n            return {\r\n                ...state,\r\n                datetimecolor: selectTodoDatecolor(state),\r\n                datetimetext: selectTodoDateHumanReadable(state),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction todos(state = undefined, action = {}) {\r\n    switch (action.type) {\r\n        case UPDATE_TIME_FIELDS:\r\n        case actionTypes.SET:\r\n            return Object.keys(action.todos).reduce((prev, key) => ({\r\n                ...prev,\r\n                [key]: todo(state[key], {\r\n                    ...action,\r\n                    todo: action.todos[key]\r\n                })\r\n            }), state)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction path(state, action) {\r\n    if (!action.hasOwnProperty('data') || action.data === null) {\r\n        console.warn('ignored action', action)\r\n        return state;\r\n    }\r\n    switch (action.path) {\r\n        case 'todos':\r\n            if(!action.data.hasOwnProperty(state.uid)){\r\n                return state;\r\n            }\r\n            return {\r\n                ...state,\r\n                todos: todos(state.todos, { ...action, todos: action.data[state.uid] })\r\n            }\r\n        case 'users':\r\n            return {\r\n                ...state,\r\n                userFieldId: Object.keys(action.data)\r\n                    .reduce(\r\n                        (prev, key) => userHasUid(action.data[key], state.uid)\r\n                            ? key\r\n                            : prev\r\n                        , state.userFieldId\r\n                    )\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport function app(state = {\r\n    uid: undefined,\r\n    userFieldId: undefined,\r\n    todos: {},\r\n    currentTime: Date.now()\r\n}, action = {}) {\r\n    switch (action.type) {\r\n        case UPDATE_TIME_FIELDS:\r\n            return {\r\n                ...state,\r\n                currentTime: Date.now(),\r\n                todos: todos(state.todos, { ...action, todos: state.todos })\r\n            }\r\n        case actionTypes.LOGOUT:\r\n            return {\r\n                ...state,\r\n                uid: undefined,\r\n                userFieldId: undefined,\r\n                todos: {}\r\n            }\r\n        case actionTypes.SET_PROFILE:\r\n            if (!isUser(action.profile)) return state;\r\n            return {\r\n                ...state,\r\n                uid: selectUid(action.profile),\r\n                user: action.profile\r\n            };\r\n        case actionTypes.SET:\r\n            if (!action) return state;\r\n            if(!action.path) return state;\r\n            return path(state, action)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default app;","import React, { useState } from \"react\";\nimport { TodoFormView } from \"./TodoFormView/TodoFormView\";\nimport { defaultTodo } from \"../../redux/app\";\n\nexport const TodoFormController = ({ addTodo, uid, firebase }) => {\n  const [todo, setTodo] = useState(defaultTodo);\n\n  function onTextChange(e) {\n    setTodo({\n      ...todo,\n      text: e.target.value\n    });\n  }\n  function onDatetimeChange(value) {\n    setTodo({\n      ...todo,\n      datetime: value\n    });\n  }\n  function onPriorityChange(e) {\n    setTodo({\n      ...todo,\n      priority: e.target.value\n    });\n  }\n\n  function onAdd() {\n    if (todo.text === \"\") return;\n    let r = addTodo(todo, uid, firebase)\n    if (!r) return;\n    setTodo({\n      ...todo,\n      text: \"\"\n    });\n  }\n\n  function onSubmit(event) {\n    if (event.keyCode === 13) onAdd();\n  }\n\n  return <div>\n    <TodoFormView\n      todo={todo}\n      onSubmit={onSubmit}\n      onAdd={onAdd}\n      onPriorityChange={onPriorityChange}\n      onDatetimeChange={onDatetimeChange}\n      onTextChange={onTextChange}\n    />\n  </div>\n}\n\n\nexport default TodoFormController;","import { TodoForm } from './TodoForm'\r\nexport {TodoForm};\r\nexport default TodoForm;","import { TodoFormController } from './TodoFormController';\r\n\r\nexport const TodoForm = TodoFormController\r\nexport default TodoForm;","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/messaging';\r\nimport 'firebase/functions';\r\nrequire('cors')({ origin: true })\r\nexport const config = {\r\n    apiKey: \"AIzaSyCcSDFLCkpRMSeujLrSdQqYb3iwQk7fS-M\",\r\n    authDomain: \"chama-hooks.firebaseapp.com\",\r\n    databaseURL: \"https://chama-hooks.firebaseio.com\",\r\n    projectId: \"chama-hooks\",\r\n    storageBucket: \"chama-hooks.appspot.com\",\r\n    messagingSenderId: \"518384846061\"\r\n};\r\nfirebase.initializeApp(config)\r\nexport const database = firebase.database();\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport const messaging = firebase.messaging();\r\nexport const sendNotifications = firebase.functions().httpsCallable('sendNotifications')\r\nexport const fire = firebase;\r\nexport default firebase;","import { combineReducers } from 'redux'\r\nimport { firebaseStateReducer } from 'react-redux-firebase'\r\nimport app from './app'\r\n\r\nexport const rootReducer = combineReducers({\r\n  firebase:firebaseStateReducer,\r\n  app\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { reactReduxFirebase } from 'react-redux-firebase'\r\n\r\nimport { fire } from '../firebase/firebase'\r\nimport rootReducer from './reducer';\r\nimport timerMiddleware from 'redux-timer-middleware'\r\n\r\nconst rrfConfig = {\r\n  userProfile: 'users',\r\n  todos: 'todos'\r\n}\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\nconst createStoreWithMiddleware = composeEnhancers(applyMiddleware(timerMiddleware))(createStore);\r\n\r\n\r\nexport const configureStore = (initialState) => {\r\n  const createStoreWithFirebase = compose(\r\n    reactReduxFirebase(fire, rrfConfig),\r\n  )(createStoreWithMiddleware)\r\n  const store = createStoreWithFirebase(rootReducer, {});\r\n  return store;\r\n}\r\nexport default configureStore;","import React from 'react';\r\n\r\nexport const BottomNav = ({ logout, login, uid, app }) => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\"><hr /></div>\r\n            <div className=\"col-md-12\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        {\r\n                            !uid\r\n                                ? (\r\n                                    <button className=\"btn btn-success\" onClick={() => login()}>Login</button>\r\n                                ) : (\r\n                                    <button className=\"btn btn-danger\" onClick={() => logout()}>Logout {app.user.displayName}</button>\r\n                                )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default BottomNav","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { SubstateProvider } from \"use-substate\";\nimport { Provider } from \"react-redux\"\nimport TodoList from \"./components/TodoList/\";\nimport TodoForm from \"./components/TodoForm/\";\nimport configureStore from \"./redux/configureStore\";\nimport { BottomNav } from \"./components/BottomNav\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport { compose } from 'redux';\nimport { connect } from 'react-redux'\nimport { selectTodos, createTodo, createTimer, createStopTimer } from \"./redux/app\";\nimport { sendNotifications, messaging } from \"./firebase/firebase\";\n\n\n\nconst AppController = (props) => {\n  const { startTimer, stopTimer, setUpMessaging, setFCM, userFieldId } = props\n  useEffect(\n    () => {\n      if (userFieldId) {\n        setUpMessaging(userFieldId, setFCM)\n        startTimer()\n        return () => stopTimer()\n      }\n    },\n    [userFieldId]\n  )\n  return (\n    <div>\n      <TodoForm {...props} />\n      {props.uid ? <TodoList {...props} /> : null}\n      <BottomNav {...props} />\n    </div>\n  );\n}\n\nexport const App = compose(\n  firebaseConnect(['users']),\n  connect(\n    state => {\n      return {\n        ...state,\n        uid: state.app.uid,\n        userFieldId: state.app.userFieldId,\n        todos: selectTodos(state.app)\n      }\n    },\n    (dispatch, { firebase }) => ({\n      login: () => {\n        firebase.login({\n          provider: 'google',\n          type: 'popup'\n        })\n      },\n      logout: () => {\n        firebase.logout()\n      },\n      notify: sendNotifications,\n      setFCM: (fcm, userFieldId) => {\n        console.log('set token')\n        firebase.set(`users/${userFieldId}/notificationTokens/${fcm}`, true)\n      },\n      toggleTodo: (payload, uid) => {\n        firebase.set(`todos/${uid}/${payload.id}/completed`, !payload.completed)\n      },\n      addTodo: (payload, uid) => {\n        if (!uid) {\n          firebase.login({\n            provider: 'google',\n            type: 'popup'\n          })\n          return false\n        }\n        const todo = createTodo(payload)\n        return firebase.set(`todos/${uid}/${todo.id}`, todo)\n      },\n      startTimer: () => {\n        dispatch(createTimer())\n      },\n      stopTimer: () => {\n        dispatch(createStopTimer())\n      },\n      setUpMessaging: (userFieldId, onReceiveToken) => {\n        messaging.onTokenRefresh(()=>{\n          messaging.getToken().then(function (refreshedToken) {\n            onReceiveToken(refreshedToken, userFieldId)\n          }).catch(function (err) {\n            console.log('Unable to retrieve refreshed token ', err);\n          });\n        });\n        messaging\n          .requestPermission()\n          .then(\n            () => {\n              return messaging.getToken();\n            }).then(\n              token => onReceiveToken(token, userFieldId)\n            )\n          .catch(error => {\n            if (error.code === \"messaging/permission-blocked\") {\n              console.log(\"Please Unblock Notification Request Manually\");\n            } else {\n              console.log(\"Error Occurred\", error);\n            }\n          });\n        return () => {\n          messaging.onTokenRefresh(undefined)\n        };\n      }\n    })\n  )\n)(AppController)\n\nconst store = configureStore(\n  { todos: [] }\n);\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<SubstateProvider value={store}><Provider store={store}><App /></Provider></SubstateProvider>, rootElement);\n\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker.register('./firebase-messaging-sw.js')\n    .then(function (registration) {\n      console.log('Registration successful, scope is:', registration.scope);\n    }).catch(function (err) {\n      console.log('Service worker registration failed, error:', err);\n    });\n}"],"sourceRoot":""}