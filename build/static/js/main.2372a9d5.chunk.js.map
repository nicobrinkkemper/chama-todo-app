{"version":3,"sources":["components/TodoList/TodoListView/TodoListView.js","components/Todo/TodoView/TodoView.js","components/Todo/Todo.js","components/Todo/TodoController.js","components/TodoList/TodoListController.js","constants.js","redux/modules/todos.js","components/TodoList/TodoList.js","components/TodoList/index.js","components/TodoForm/TodoFormView/TodoFormView.js","components/TodoForm/TodoFormController.js","components/TodoForm/index.js","components/TodoForm/TodoForm.js","components/BottomNav.js","firebase/firebase.js","redux/modules/notifications.js","redux/reducer.js","redux/configureStore.js","store.js","index.js","redux/modules/profile.js"],"names":["TodoListView","props","todos","react_default","a","createElement","className","length","map","todo","i","key","toString","TodoView","badges","text","isSpeaking","onCompleteTodo","concat","style","position","bottom","right","color","marginLeft","onClick","_ref","children","marginRight","Todo","notify","id","useEffect","datetimecolor","datetimetext","prioritytext","prioritycolor","TodoView_TodoView","TodoListController","toggleTodo","uid","Todos","_props","Todo_Todo","Object","assign","TodoListView_TodoListView","PRIORITY","PRIORITY_COLOR","DATETIME_COLOR","priorityDesc","ta","tb","priority","isPending","t","hasOwnProperty","completed","isTodo","selectPrioritycolor","selectPrioritytext","selectTodoDatetimecolor","selectTodoDatetimecolorIndex","isAfter","Date","datetime","isPast","dfrc","differenceInMinutes","shouldNotify","selectTodoDateHumanReadable","distanceInWordsToNow","includeSeconds","addSuffix","TodoList","compose","firebaseConnect","path","connect","state","firebase","data","values","filter","sort","objectSpread","TodoFormView","onSubmit","onDatetimeChange","onPriorityChange","onTextChange","onAdd","type","required","value","autoFocus","placeholder","onKeyUp","onChange","entry_default","locale","minDate","TodoFormController","addTodo","profile","login","_useState","useState","_useState2","slicedToArray","setTodo","isLoaded","isEmpty","event","keyCode","e","target","TodoForm","BottomNav","logout","notifications","removeNotification","displayName","react_bs_notifier_es","timeout","alerts","onDismiss","alert","require","origin","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","auth","GoogleAuthProvider","messaging","usePublicVapidKey","sendNotifications","functions","httpsCallable","fire","ADD_NOTIFICATION","REMOVE_NOTIFICATION","arguments","undefined","action","toConsumableArray","payload","v","rootReducer","combineReducers","rrfConfig","userProfile","createStoreWithMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","timerMiddleware","composeEnhancers","createStore","store","initialState","reactReduxFirebase","createStoreWithFirebase","configureStore","App","dispatch","provider","createRemoveNotification","setNotificationToken","fcm","set","stringHash","format","createTodo","startTimer","START_TIMER","actionName","timerName","timerInterval","stopTimer","STOP_TIMER","startCloudMessaging","onReceiveToken","console","log","onTokenRefresh","getToken","then","refreshedToken","catch","err","onMessage","fbPayload","from","message","title","requestPermission","token","error","code","stopCloudMessaging","components_TodoForm","minHeight","components_TodoList","display","justifyContent","alignItems","height","dist_default","name","BottomNav_BottomNav","rootElement","document","getElementById","ReactDOM","render","es","navigator","serviceWorker","register","registration","scope"],"mappings":"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","file":"static/js/main.2372a9d5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function TodoListView(props) {\r\n    const { todos } = props\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <br />\r\n                        {\r\n                            todos.length === 0\r\n                                ? (\r\n                                    <h1>All done</h1>\r\n                                ) : (\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-8\">\r\n                                            <h5>Todo List</h5>\r\n                                        </div>\r\n                                        <div className=\"col-md-4 text-right\">\r\n                                            <h5>{todos.length} todos left</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <ul className=\"list-group\">\r\n                            {\r\n                                todos.map((todo, i) => (\r\n                                    <li key={i.toString()} className=\"list-group-item\" >\r\n                                        {todo}\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoListView;","import React from 'react'\r\n\r\nexport function TodoView(props) {\r\n    const { badges, text, isSpeaking, onCompleteTodo } = props\r\n    return <div className={`Todo ${isSpeaking ? 'speaking' : ''}`}>\r\n        <h4>\r\n            <i className=\"material-icons\" style={{ position: 'absolute', bottom: 10, right: 20, color: '#99979c' }}>event</i>\r\n            {text}\r\n            <button\r\n                className=\"float-right btn btn-success btn-sm\"\r\n                style={{ marginLeft: 10 }}\r\n                onClick={onCompleteTodo}\r\n            >\r\n                Complete\r\n        </button>\r\n        </h4>\r\n        <p>\r\n            {\r\n                badges.map(\r\n                    ({ color, children }, i) => (\r\n                        <span key={i.toString()} className={`badge badge-${color}`} style={{marginRight:6}}>\r\n                            {children}\r\n                        </span>\r\n                    )\r\n                )\r\n            }\r\n        </p>\r\n    </div>\r\n}\r\nexport default TodoView","import { TodoController } from './TodoController'\r\n\r\nexport const Todo = TodoController\r\nexport default Todo;","import React, { useEffect } from 'react'\r\nimport TodoView from './TodoView/TodoView'\r\n\r\nexport function TodoController(props) {\r\n    const { notify, onCompleteTodo, id } = props;\r\n\r\n    useEffect(\r\n        () => {\r\n            if (props.datetimecolor === 'warning') notify()\r\n        },\r\n        [props.datetimetext]\r\n    )\r\n    const badges = [\r\n        {\r\n            children: props.datetimetext,\r\n            color: props.datetimecolor\r\n        },\r\n        {\r\n            children: props.prioritytext,\r\n            color: props.prioritycolor\r\n        }\r\n    ]\r\n    return <TodoView\r\n        badges={badges}\r\n        onCompleteTodo={() => onCompleteTodo(id)}\r\n        text={props.text}\r\n    />\r\n}","import React from \"react\";\r\nimport TodoListView from \"./TodoListView/TodoListView\";\r\nimport Todo from \"../Todo/Todo\";\r\n\r\nexport const TodoListController = (props) => {\r\n    const { toggleTodo, todos, uid, notify } = props\r\n    if (!todos) return null;\r\n    const Todos = todos.map(\r\n        (_props) => <Todo\r\n            {..._props}\r\n            notify={() => { notify(_props) }}\r\n            onCompleteTodo={() => toggleTodo(_props, uid)}\r\n        />\r\n    )\r\n    return (\r\n        <TodoListView\r\n            todos={Todos}\r\n        />\r\n    )\r\n}\r\nexport default TodoListController;","export const PRIORITY = [\r\n    'Noteworthy',\r\n    'Significant',\r\n    'Important'\r\n]\r\nexport const PRIORITY_COLOR = [\r\n    'info',\r\n    'secondary',\r\n    'primary'\r\n]\r\nexport const DATETIME_COLOR = [\r\n    'danger',\r\n    'warning',\r\n    'success'\r\n]\r\nexport const NL_DATE_FORMAT = \"DD-MM-YYYY\"\r\nexport const DATE_FORMAT = \"YYYY-MM-DD\"\r\nexport const TIME_FORMAT = \"HH:mm\"","import stringHash from \"string-hash\";\r\nimport { format, differenceInMinutes, isAfter, distanceInWordsToNow } from \"date-fns\";\r\nimport { PRIORITY_COLOR, PRIORITY, DATETIME_COLOR } from \"../../constants\";\r\nimport { START_TIMER, STOP_TIMER } from 'redux-timer-middleware';\r\n\r\n// ACTIONS\r\nexport const UPDATE_TIME_FIELDS = 'UPDATE_TIME_FIELDS' // selectTodos changes based on time so dispatching any other action would work too\r\n\r\n// SELECTORS\r\nexport const priorityDesc = (ta, tb) => tb.priority - ta.priority\r\nexport const isPending = t => !t.hasOwnProperty('completed') || !t.completed\r\nexport const isPast = t => isAfter(new Date(), t.datetime)\r\nexport const isTodo = t => t !== null\r\n    && t.hasOwnProperty('id')\r\n    && t.hasOwnProperty('text')\r\n    && t.hasOwnProperty('datetime')\r\n    && t.hasOwnProperty('priority')\r\nexport const shouldNotify = t => {\r\n    const dfrc = differenceInMinutes(t.datetime, new Date()) \r\n    return dfrc < 5 && dfrc > 0\r\n}\r\nexport const selectPrioritycolor = t => PRIORITY_COLOR[t.priority]\r\nexport const selectPrioritytext = t => PRIORITY[t.priority]\r\nexport const selectTodoDatetimecolor = t => DATETIME_COLOR[selectTodoDatetimecolorIndex(t)]\r\nexport const selectTodoDatetimecolorIndex = t => isPast(t)\r\n    ? 0\r\n    : (\r\n        shouldNotify(t)\r\n            ? 1\r\n            : 2\r\n    )\r\nexport const selectTodoDateHumanReadable = t => distanceInWordsToNow(t.datetime, { includeSeconds: true, addSuffix: true })\r\nexport function selectTodos(todos, uid) {\r\n    if (!todos.hasOwnProperty(uid) || !todos[uid]) return [];\r\n    return Object.values(todos[uid])\r\n        .filter(isTodo)\r\n        .filter(isPending)\r\n        .sort(priorityDesc)\r\n        .map(\r\n            t => ({\r\n                ...t,\r\n                prioritycolor: selectPrioritycolor(t),\r\n                prioritytext: selectPrioritytext(t),\r\n                datetimecolor: selectTodoDatetimecolor(t),\r\n                datetimetext: selectTodoDateHumanReadable(t)\r\n            })\r\n        )\r\n}\r\n\r\n\r\n/// CREATORS\r\nexport const createTodo = payload => ({\r\n    ...payload,\r\n    id: stringHash(payload.text),\r\n    datetime: format(payload.datetime)\r\n})\r\n\r\n// ACTION CREATORS\r\nexport const createUpdateTimeFields = () => ({\r\n    type: UPDATE_TIME_FIELDS\r\n})\r\nexport const createStartUpdateTimeFields = () => ({\r\n    type: START_TIMER,\r\n    payload: {\r\n        actionName: UPDATE_TIME_FIELDS,\r\n        timerName: 'updateTimeFields',\r\n        timerInterval: 10000\r\n    }\r\n})\r\nexport const createStopUpdateTimeFields = () => ({\r\n    type: STOP_TIMER,\r\n    payload: {\r\n        timerName: 'updateTimeFields',\r\n    }\r\n})\r\n","import { TodoListController } from './TodoListController';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux';\r\nimport { selectTodos } from '../../redux/modules/todos';\r\n\r\nexport const TodoList = compose(\r\n    firebaseConnect(({ uid }) => {\r\n        return [\r\n            {\r\n                path: `todos/${uid}`\r\n            }\r\n        ]\r\n    }),\r\n    connect(\r\n        (state, props) => {\r\n            if (!state.firebase.data.todos) return state\r\n            return {\r\n                todos: selectTodos(state.firebase.data.todos, props.uid)\r\n            }\r\n        }\r\n    )\r\n)(TodoListController)\r\n\r\nexport default TodoList;","import {TodoList} from \"./TodoList\";\r\nexport {TodoList};\r\nexport default TodoList","import React from 'react'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { PRIORITY } from '../../../constants';\r\n\r\nexport function TodoFormView(props) {\r\n    const { todo, onSubmit, onDatetimeChange, onPriorityChange, onTextChange, onAdd } = props\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <br />\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        className=\"form-control text\"\r\n                        type=\"text\"\r\n                        required={true}\r\n                        value={todo.text}\r\n                        autoFocus={true}\r\n                        placeholder=\"Write a todo\"\r\n                        onKeyUp={onSubmit}\r\n                        onChange={onTextChange}\r\n                    />\r\n                    <DateTimePicker\r\n                        locale=\"nl-NL\"\r\n                        minDate={new Date()}\r\n                        onChange={onDatetimeChange}\r\n                        value={todo.datetime}\r\n                    />\r\n                    <select\r\n                        className=\"form-control priority\"\r\n                        value={todo.priority || 0}\r\n                        onChange={onPriorityChange}\r\n                    >\r\n                        <option value={0}>{PRIORITY[0]}</option>\r\n                        <option value={1}>{PRIORITY[1]}</option>\r\n                        <option value={2}>{PRIORITY[2]}</option>\r\n                    </select>\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-primary\" onClick={onAdd}>\r\n                            Add\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoFormView","import React, { useState } from \"react\";\nimport { TodoFormView } from \"./TodoFormView/TodoFormView\";\n\nexport const TodoFormController = ({ addTodo, profile, login, uid }) => {\n  const [todo, setTodo] = useState({\n    text:'',\n    priority: 0,\n    datetime: new Date()\n  });\n\n  function onTextChange(e) {\n    setTodo({\n      ...todo,\n      text: e.target.value\n    });\n  }\n  function onDatetimeChange(value) {\n    setTodo({\n      ...todo,\n      datetime: value\n    });\n  }\n  function onPriorityChange(e) {\n    setTodo({\n      ...todo,\n      priority: e.target.value\n    });\n  }\n\n  function onAdd() {\n    if (todo.text === \"\" || !profile.isLoaded) return;\n    if(profile.isEmpty){\n      login()\n      return;\n    }\n    let r = addTodo(todo, uid)\n    if (!r) return;\n    setTodo({\n      ...todo,\n      text: \"\"\n    });\n  }\n\n  function onSubmit(event) {\n    if (event.keyCode === 13) onAdd();\n  }\n\n  return <div>\n    <TodoFormView\n      todo={todo}\n      onSubmit={onSubmit}\n      onAdd={onAdd}\n      onPriorityChange={onPriorityChange}\n      onDatetimeChange={onDatetimeChange}\n      onTextChange={onTextChange}\n    />\n  </div>\n}\n\n\nexport default TodoFormController;","import { TodoForm } from './TodoForm'\r\nexport {TodoForm};\r\nexport default TodoForm;","import { TodoFormController } from './TodoFormController';\r\n\r\nexport const TodoForm = TodoFormController\r\nexport default TodoForm;","import React from 'react';\r\nimport { AlertList } from \"react-bs-notifier\";\r\n\r\nexport const BottomNav = ({ logout, login, uid, notifications, displayName, removeNotification, profile }) => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\"><hr /></div>\r\n            <div className=\"col-md-12\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        {\r\n                            !uid\r\n                                ? (\r\n                                    <button className=\"btn btn-success\" onClick={() => login()}>Login</button>\r\n                                ) : (\r\n                                    <button className=\"btn btn-danger\" onClick={() => logout()}>Logout {profile.displayName}</button>\r\n                                )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AlertList position={'bottom-right'} timeout={3000} alerts={notifications || []} onDismiss={(alert) => removeNotification(alert.id)} />\r\n        </div>\r\n    )\r\n}\r\nexport default BottomNav","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/messaging';\r\nimport 'firebase/functions';\r\nrequire('cors')({ origin: true })\r\nexport const config = {\r\n    apiKey: \"AIzaSyCcSDFLCkpRMSeujLrSdQqYb3iwQk7fS-M\",\r\n    authDomain: \"chama-hooks.firebaseapp.com\",\r\n    databaseURL: \"https://chama-hooks.firebaseio.com\",\r\n    projectId: \"chama-hooks\",\r\n    storageBucket: \"chama-hooks.appspot.com\",\r\n    messagingSenderId: \"518384846061\"\r\n};\r\nfirebase.initializeApp(config)\r\nexport const database = firebase.database();\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport const messaging = firebase.messaging();\r\nmessaging.usePublicVapidKey(\"BN8krSM0CRd6YdRwSXa1xosJyF0236U39Ftk27Rr7lnkrLtsAba9XQ4cUSGyQMkzRkhEJ7iaR1p6WOjHFNRRdu0\");\r\nexport const sendNotifications = firebase.functions().httpsCallable('sendNotifications')\r\nexport const fire = firebase;\r\nexport default firebase;","\r\n// ACTION TYPES\r\nconst ADD_NOTIFICATION = 'ADD_NOTIFICATION'\r\nconst REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION'\r\n\r\n// SELECTORS\r\nexport const selectNotifications = (notifications)=>{\r\n    if(!notifications) return []\r\n    return Object.keys(notifications).filter(token => notifications[token])\r\n}\r\n\r\n// ACTION CREATORS\r\nexport function createRemoveNotification(id) {\r\n    return {\r\n        type: REMOVE_NOTIFICATION,\r\n        payload: id\r\n    }\r\n}\r\nexport function createNotification(fbPayload) {\r\n    return {\r\n        type: ADD_NOTIFICATION,\r\n        payload: {\r\n            id: fbPayload.from,\r\n            type: 'warning',\r\n            message: fbPayload.data.title\r\n        }\r\n    }\r\n}\r\n\r\n// REDUCER\r\nexport function notifications(state = [], action = {}) {\r\n    switch (action.type) {\r\n        case ADD_NOTIFICATION:\r\n            return [...state, action.payload]\r\n        case REMOVE_NOTIFICATION:\r\n            return state.filter(v => v.id !== action.payload)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default notifications","import { combineReducers } from 'redux'\r\nimport { firebaseStateReducer as firebase } from 'react-redux-firebase'\r\nimport notifications from './modules/notifications'\r\n\r\nexport const rootReducer = combineReducers({\r\n  firebase,\r\n  notifications\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { reactReduxFirebase } from 'react-redux-firebase'\r\n\r\nimport { fire } from '../firebase/firebase'\r\nimport rootReducer from './reducer';\r\nimport timerMiddleware from 'redux-timer-middleware'\r\n\r\nconst rrfConfig = {\r\n  userProfile: 'users'\r\n}\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\nconst createStoreWithMiddleware = composeEnhancers(applyMiddleware(timerMiddleware))(createStore);\r\n\r\n\r\nexport const configureStore = (initialState) => {\r\n  const createStoreWithFirebase = compose(\r\n    reactReduxFirebase(fire, rrfConfig),\r\n  )(createStoreWithMiddleware)\r\n  const store = createStoreWithFirebase(rootReducer, {});\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('./reducer', () => {\r\n      const nextRootReducer = require('./reducer')\r\n      store.replaceReducer(nextRootReducer)\r\n    })\r\n  }\r\n\r\n  return store;\r\n}\r\nexport default configureStore;","\r\nimport configureStore from \"./redux/configureStore\";\r\nexport const store = configureStore(\r\n    {}\r\n);\r\nexport default store;","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\"\nimport TodoList from \"./components/TodoList/\";\nimport TodoForm from \"./components/TodoForm/\";\nimport { BottomNav } from \"./components/BottomNav\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport { compose } from 'redux';\nimport { connect } from 'react-redux'\nimport { sendNotifications, messaging } from \"./firebase/firebase\";\nimport { createRemoveNotification, createNotification } from \"./redux/modules/notifications\";\nimport { createTodo, createStartUpdateTimeFields, createStopUpdateTimeFields } from \"./redux/modules/todos\";\nimport { isInitialising } from \"./redux/modules/profile\";\nimport Spinner from 'react-spinkit';\nimport { store } from \"./store\";\n\nconst AppController = (props) => {\n  const { startTimer, stopTimer, startCloudMessaging, stopCloudMessaging, setNotificationToken, uid, profile } = props\n  useEffect(\n    () => {\n      if (!uid) return;\n      startCloudMessaging(fcm => setNotificationToken(uid, fcm))\n      startTimer()\n      return () => {\n        stopCloudMessaging()\n        stopTimer()\n      }\n    },\n    [uid]\n  )\n  return (\n    <div>\n      <TodoForm {...props} />\n      {\n        !uid\n          ? (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 100 }}>\n              {!profile.isLoaded ? (<Spinner name='double-bounce' />) : ''}\n            </div>\n          ) : (\n            <div style={{ minHeight: 200 }}>\n              <TodoList {...props} />\n            </div>\n          )\n      }\n      <BottomNav {...props} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  if (isInitialising(state.firebase.profile)) return {\n    profile: state.firebase.profile\n  };\n  return {\n    profile: state.firebase.profile,\n    uid: state.firebase.auth.uid,\n    notifications: state.notifications\n  };\n}\n\nconst mapDispatchToProps = (dispatch, { firebase }) => ({\n  login: () => {\n    firebase.login({\n      provider: 'google',\n      type: 'popup'\n    })\n  },\n  logout: () => {\n    firebase.logout()\n  },\n  removeNotification: (id) => {\n    dispatch(createRemoveNotification(id))\n  },\n  notify: (todo)=>sendNotifications({...todo, text: todo.text + ' ' + todo.datetimetext}),\n  setNotificationToken: (uid, fcm) => {\n    firebase.set(`notificationTokens/${uid}/${fcm}`, true)\n  },\n  toggleTodo: (payload, uid) => {\n    firebase.set(`todos/${uid}/${payload.id}/completed`, !payload.completed)\n  },\n  addTodo: (payload, uid) => {\n    const todo = createTodo(payload)\n    return firebase.set(`todos/${uid}/${todo.id}`, todo)\n  },\n  startTimer: () => {\n    dispatch(createStartUpdateTimeFields())\n  },\n  stopTimer: () => {\n    dispatch(createStopUpdateTimeFields())\n  },\n  startCloudMessaging: (onReceiveToken) => {\n    console.log('start messaging')\n    messaging.onTokenRefresh(() => {\n      messaging.getToken().then(function (refreshedToken) {\n        onReceiveToken(refreshedToken)\n      }).catch(function (err) {\n        console.log('Unable to retrieve refreshed token ', err);\n      });\n    });\n    messaging.onMessage((payload) => {\n      dispatch(createNotification(payload))\n    });\n    messaging\n      .requestPermission()\n      .then(\n        () => messaging.getToken()\n      ).then(\n        token => onReceiveToken(token)\n      )\n      .catch(error => {\n        if (error.code === \"messaging/permission-blocked\") {\n          console.log(\"Please Unblock Notification Request Manually\");\n        } else {\n          console.log(\"Error Occurred\", error);\n        }\n      });\n  },\n  stopCloudMessaging: () => {\n    console.log('stop messaging')\n    messaging.onMessage(() => { })\n    messaging.onTokenRefresh(() => { })\n  },\n})\n\nexport const App = compose(\n  firebaseConnect([]),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(AppController)\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Provider store={store}><App /></Provider>, rootElement);\n\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker.register('./firebase-messaging-sw.js')\n    .then(function (registration) {\n      console.log('Registration successful, scope is:', registration.scope);\n    }).catch(function (err) {\n      console.log('Service worker registration failed, error:', err);\n    });\n}","// SELECTORS\r\nexport const isInitialising = profile => profile.isEmpty || !profile.isLoaded\r\nexport const isEmpty = profile => profile.isEmpty\r\nexport const isLoaded = profile => profile.isLoaded"],"sourceRoot":""}